{"version":3,"file":"nets-easy-for-woocommerce.min.js","mappings":"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","sources":["webpack://dibs-easy-for-woocommerce/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://dibs-easy-for-woocommerce/./assets/js/nets-easy-for-woocommerce.js"],"sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","/**\n * @member wcDibsEasy\n *\n */\njQuery( function ( $ ) {\n    if ( typeof wcDibsEasy === \"undefined\" ) {\n        return false\n    }\n    /**\n     * The main object.\n     *\n     * @type {Object} dibsEasyForWoocommerce\n     */\n    const dibsEasyForWoocommerce = {\n        bodyEl: $( \"body\" ),\n        paymentMethodEl: $( 'input[name=\"payment_method\"]' ),\n        dibsCheckout: null,\n        blocked: false,\n        selectAnotherSelector: \"#dibs-easy-select-other\",\n        checkoutInitiated: wcDibsEasy.checkoutInitiated,\n        dibsOrderProcessing: false,\n        checkoutFormSelector: \"form.checkout\",\n        standardWooFields: wcDibsEasy.standard_woo_checkout_fields,\n        wooTerms: \"form.checkout #terms\",\n\n        /**\n         * Initialize the gateway\n         */\n        init() {\n            $( document ).ready( dibsEasyForWoocommerce.loadDibs )\n            dibsEasyForWoocommerce.bodyEl.on(\n                \"click\",\n                dibsEasyForWoocommerce.selectAnotherSelector,\n                dibsEasyForWoocommerce.changeFromDibsEasy,\n            )\n        },\n\n        /**\n         * Check if DIBS Easy is the selected gateway.\n         */\n        dibsIsSelected() {\n            if ( dibsEasyForWoocommerce.paymentMethodEl.length > 0 ) {\n                dibsEasyForWoocommerce.paymentMethod = dibsEasyForWoocommerce.paymentMethodEl.filter( \":checked\" ).val()\n                if ( \"dibs_easy\" === dibsEasyForWoocommerce.paymentMethod ) {\n                    return true\n                }\n            }\n            return false\n        },\n        /**\n         * Triggers on document ready.\n         */\n        loadDibs() {\n            if ( dibsEasyForWoocommerce.dibsIsSelected() ) {\n                dibsEasyForWoocommerce.moveExtraCheckoutFields()\n                dibsEasyForWoocommerce.initDibsCheckout()\n                dibsEasyForWoocommerce.bodyEl.on( \"update_checkout\", dibsEasyForWoocommerce.updateCheckout )\n                dibsEasyForWoocommerce.bodyEl.on( \"updated_checkout\", dibsEasyForWoocommerce.updatedCheckout )\n            }\n        },\n        /**\n         * Triggers after a successful payment.\n         *\n         * @param {Object} response\n         */\n        paymentCompleted( response ) {\n            dibsEasyForWoocommerce.logToFile(\n                `Payment completed is triggered with payment id: ${ response.paymentId }`,\n            )\n            const redirectUrl = sessionStorage.getItem( \"redirectNets\" )\n            if ( redirectUrl ) {\n                window.location.href = redirectUrl\n            }\n        },\n\n        /**\n         *  Display login error\n         *\n         * @param {string} message\n         */\n        displayMustLoginError( message ) {\n            const mustLoginClass = \"woocommerce-NoticeGroupwoocommerce-NoticeGroup-updateOrderReview\"\n            const mustLoginNotice = `<div class=\"${ mustLoginClass }\">\n\t\t\t\t<ul class=\"woocommerce-error\" role=\"alert\">\n\t\t\t\t\t<li>${ message }</li>\n\t\t\t\t</ul>\n\t\t\t</div>`\n            dibsEasyForWoocommerce.checkoutFormSelector.prepend( mustLoginNotice )\n        },\n        /**\n         * Update WC form if needed\n         *\n         * @param {Object} data\n         */\n        updateAddress( data ) {\n            if ( \"yes\" === data.updateNeeded ) {\n                $( \"#billing_country\" ).val( data.country )\n                $( \"#shipping_country\" ).val( data.country )\n                $( \"#billing_postcode\" ).val( data.postCode )\n                $( \"#shipping_postcode\" ).val( data.postCode )\n            }\n\n            if ( \"yes\" === data.mustLogin ) {\n                // Customer might need to log in. Inform customer and freeze DIBS checkout.\n                dibsEasyForWoocommerce.displayMustLoginError( data.mustLoginMessage )\n                dibsEasyForWoocommerce.dibsCheckout.freezeCheckout()\n\n                const etop = dibsEasyForWoocommerce.checkoutFormSelector.offset().top\n                $( \"html, body\" ).animate(\n                    {\n                        scrollTop: etop,\n                    },\n                    1000,\n                )\n            } else {\n                // All good release checkout and trigger update_checkout event\n                dibsEasyForWoocommerce.dibsCheckout.thawCheckout()\n                $( document.body ).trigger( \"update_checkout\" )\n            }\n        },\n\n        updateCheckout() {\n            console.log( \"update_checkout\" )\n            if ( window.Dibs !== undefined ) {\n                // lock iframe\n                dibsEasyForWoocommerce.dibsCheckout.freezeCheckout()\n            }\n        },\n        updatedCheckout() {\n            console.log( \"updated_checkout\" )\n            if ( window.Dibs !== undefined ) {\n                // unlock iframe\n                dibsEasyForWoocommerce.dibsCheckout.thawCheckout()\n                $( \"#dibs-order-review\" ).unblock()\n            }\n        },\n        /**\n         * Triggers whenever customer updates address information\n         *\n         * @param {Object} address\n         */\n        addressChanged( address ) {\n            dibsEasyForWoocommerce.logToFile( \"Address changed is triggered.\" )\n            if ( address ) {\n                console.log( \"address-changed\" )\n                console.log( address )\n                $.ajax( {\n                    type: \"POST\",\n                    dataType: \"json\",\n                    async: true,\n                    url: wcDibsEasy.customer_address_updated_url,\n                    data: {\n                        action: \"customer_address_updated\",\n                        address,\n                        nonce: wcDibsEasy.nets_checkout_nonce,\n                    },\n                    success( response ) {},\n                    error( response ) {},\n                    complete( response ) {\n                        console.log( \"COMPLETED\" )\n                        console.log( \"customer_address_updated \" )\n                        console.log( response.responseJSON.data )\n                        dibsEasyForWoocommerce.updateAddress( response.responseJSON.data )\n                    },\n                } )\n            }\n        },\n        /**\n         * Init Dibs Easy Checkout\n         */\n        initDibsCheckout() {\n            // Constructs a new Checkout object.\n            dibsEasyForWoocommerce.dibsCheckout = new Dibs.Checkout( {\n                checkoutKey: wcDibsEasy.privateKey,\n                paymentId: wcDibsEasy.dibs_payment_id,\n                containerId: \"dibs-complete-checkout\",\n                language: wcDibsEasy.locale,\n            } )\n            dibsEasyForWoocommerce.dibsCheckout.on( \"pay-initialized\", dibsEasyForWoocommerce.getDibsEasyOrder )\n            dibsEasyForWoocommerce.dibsCheckout.on( \"payment-completed\", dibsEasyForWoocommerce.paymentCompleted )\n            dibsEasyForWoocommerce.dibsCheckout.on( \"address-changed\", dibsEasyForWoocommerce.addressChanged )\n        },\n        /**\n         * Triggers when customer clicks the pay button.\n         * Gets the Nets Easy order and starts the order submission\n         *\n         * @param {string} paymentId\n         */\n        getDibsEasyOrder( paymentId ) {\n            dibsEasyForWoocommerce.dibsOrderProcessing = true\n            dibsEasyForWoocommerce.logToFile( `Pay initialized is triggered with payment id: ${ paymentId }` )\n            $( document.body ).trigger( \"dibs_pay_initialized\" )\n            $.ajax( {\n                type: \"POST\",\n                dataType: \"json\",\n                async: true,\n                url: wcDibsEasy.get_order_data_url,\n                data: {\n                    action: \"payment_success\",\n                    paymentId,\n                    nonce: wcDibsEasy.nets_checkout_nonce,\n                },\n                success( data ) {\n                    console.log( data )\n                    if ( false === data.success ) {\n                        console.log( \"PaymentID already exist in order\" )\n                        console.log( data )\n                        dibsEasyForWoocommerce.failOrder(\n                            \"ajax-error\",\n                            '<div class=\"woocommerce-error\">' + data.data + \"</div>\",\n                        )\n                        if ( data.data.redirect ) {\n                            window.location.href = data.data.redirect\n                        }\n                    } else {\n                        dibsEasyForWoocommerce.setAddressData( data )\n                    }\n                },\n                error( data ) {\n                    console.log( data, \"error_data\" )\n                },\n                complete( data ) {},\n            } )\n        },\n        /**\n         * Sets the customer data.\n         *\n         * @param {Object} data\n         */\n        setAddressData( data ) {\n            dibsEasyForWoocommerce.logToFile( 'Received \"customer data\" from Nets Easy' )\n            const consumer = data.data.payment.consumer\n            const { billingAddress, shippingAddress } = consumer\n\n            // billingAddress have country with 3 letters.\n\n            // check do we have data\n            const hasBillingData = typeof billingAddress === \"object\" && ! Array.isArray( billingAddress )\n            // Use shipping data if billing data do not exist.\n            $( \"#billing_address_1\" ).val( hasBillingData ? billingAddress.addressLine1 : shippingAddress.addressLine1 )\n            $( \"#billing_postcode\" ).val( hasBillingData ? billingAddress.postalCode : shippingAddress.postalCode )\n            $( \"#billing_city\" ).val( hasBillingData ? billingAddress.city : shippingAddress.city )\n            $( \"#billing_country\" ).val( shippingAddress.country )\n\n            $( \"#shipping_address_1\" ).val( shippingAddress.addressLine1 )\n            $( \"#shipping_postcode\" ).val( shippingAddress.postalCode )\n            $( \"#shipping_city\" ).val( shippingAddress.city )\n            $( \"#shipping_country\" ).val( shippingAddress.country )\n\n            if ( consumer.company.hasOwnProperty( \"name\" ) ) {\n                // B2B purchase\n                const company = consumer.company\n                const { firstName, lastName, email, phoneNumber } = company.contactDetails\n                const { prefix, number } = phoneNumber\n                $( \"#billing_company\" ).val( company.name )\n                $( \"#shipping_company\" ).val( company.name )\n                $( \"#billing_first_name\" ).val( firstName )\n                $( \"#billing_last_name\" ).val( lastName )\n                $( \"#shipping_first_name\" ).val( firstName )\n                $( \"#shipping_last_name\" ).val( lastName )\n                $( \"#billing_email\" ).val( email )\n                $( \"#billing_phone\" ).val( `${ prefix }${ number }` )\n                // trigger events for 3rd part plugins.\n                $( \"#billing_country\" ).change()\n                $( \"#billing_email\" ).change()\n                $( \"#billing_email\" ).blur()\n            } else {\n                // B2C purchase\n                const { firstName, lastName, email, phoneNumber } = consumer.privatePerson\n                const { prefix, number } = phoneNumber\n                $( \"#billing_company\" ).val( \"\" )\n                $( \"#shipping_company\" ).val( \"\" )\n                $( \"#billing_first_name\" ).val( firstName )\n                $( \"#billing_last_name\" ).val( lastName )\n                $( \"#shipping_first_name\" ).val( firstName )\n                $( \"#shipping_last_name\" ).val( lastName )\n                $( \"#billing_email\" ).val( email )\n                // trigger events for 3rd part plugins.\n                $( \"#billing_email\" ).change()\n                $( \"#billing_email\" ).blur()\n                $( \"#billing_phone\" ).val( `${ prefix }${ number }` )\n            }\n\n            // eslint-disable-next-line eqeqeq\n            if ( shippingAddress.addressLine2 != null ) {\n                $( \"#billing_address_2\" ).val( shippingAddress.addressLine2 )\n                $( \"#shipping_address_2\" ).val( shippingAddress.addressLine2 )\n            }\n\n            // Check Terms checkbox, if it exists\n            if ( $( dibsEasyForWoocommerce.wooTerms ).length > 0 ) {\n                $( dibsEasyForWoocommerce.wooTerms ).prop( \"checked\", true )\n            }\n            $( \"input#ship-to-different-address-checkbox\" ).prop( \"checked\", true )\n            dibsEasyForWoocommerce.submitOrder()\n        },\n        /**\n         * Submit the order using the WooCommerce AJAX function.\n         */\n        submitOrder() {\n            $( \".woocommerce-checkout-review-order-table\" ).block( {\n                message: null,\n                overlayCSS: {\n                    background: \"#fff\",\n                    opacity: 0.6,\n                },\n            } )\n            $.ajax( {\n                type: \"POST\",\n                url: wcDibsEasy.submitOrder,\n                data: $( \"form.checkout\" ).serialize(),\n                dataType: \"json\",\n                success( data ) {\n                    try {\n                        if ( \"success\" === data.result ) {\n                            dibsEasyForWoocommerce.logToFile( \"Successfully placed order.\" )\n                            window.sessionStorage.setItem( \"redirectNets\", data.redirect )\n                            dibsEasyForWoocommerce.dibsCheckout.send( \"payment-order-finalized\", true )\n                        } else {\n                            throw \"Result failed\"\n                        }\n                    } catch ( err ) {\n                        if ( data.messages ) {\n                            dibsEasyForWoocommerce.logToFile( \"Checkout error | \" + data.messages )\n                            dibsEasyForWoocommerce.failOrder( \"submission\", data.messages )\n                        } else {\n                            dibsEasyForWoocommerce.logToFile( \"Checkout error | No message\" )\n                            dibsEasyForWoocommerce.failOrder(\n                                \"submission\",\n                                '<div class=\"woocommerce-error\">' + \"Checkout error\" + \"</div>\",\n                            )\n                        }\n                    }\n                },\n                error( data ) {\n                    try {\n                        dibsEasyForWoocommerce.logToFile( \"AJAX error | \" + JSON.stringify( data ) )\n                    } catch ( e ) {\n                        dibsEasyForWoocommerce.logToFile( \"AJAX error | Failed to parse error message.\" )\n                    }\n                    dibsEasyForWoocommerce.failOrder(\n                        \"ajax-error\",\n                        '<div class=\"woocommerce-error\">Internal Server Error</div>',\n                    )\n                },\n            } )\n        },\n        /**\n         * When the customer changes from Dibs Easy to other payment methods.\n         *\n         * @param {Event} e\n         */\n        changeFromDibsEasy( e ) {\n            e.preventDefault()\n            $( dibsEasyForWoocommerce.checkoutFormSelector ).block( {\n                message: null,\n                overlayCSS: {\n                    background: \"#fff\",\n                    opacity: 0.6,\n                },\n            } )\n            $.ajax( {\n                type: \"POST\",\n                dataType: \"json\",\n                async: true,\n                url: wcDibsEasy.change_payment_method_url,\n                data: {\n                    action: \"dibs_change_payment_method\",\n                    dibs_easy: false,\n                    nonce: wcDibsEasy.nets_checkout_nonce,\n                },\n                success( data ) {},\n                error( data ) {},\n                complete( data ) {\n                    console.log( \"Change payment method success\" )\n                    console.log( data.responseJSON.data.redirect )\n                    dibsEasyForWoocommerce.bodyEl.removeClass( \"dibs-selected\" )\n                    window.location.href = data.responseJSON.data.redirect\n                },\n            } )\n        },\n        /**\n         * Moves all non-standard fields to the extra checkout fields.\n         */\n        moveExtraCheckoutFields() {\n            // Move order comments.\n            $( \".woocommerce-additional-fields\" ).appendTo( \"#dibs-extra-checkout-fields\" )\n\n            const form = $( 'form[name=\"checkout\"] input, form[name=\"checkout\"] select, textarea' )\n            for ( let i = 0; i < form.length; i++ ) {\n                const name = form[ i ].name\n                const fields = dibsEasyForWoocommerce.standardWooFields\n                // Check if this is a standard field.\n                if ( $.inArray( name, fields ) === -1 ) {\n                    // This is not a standard Woo field, move to our div.\n                    $( \"p#\" + name + \"_field\" ).appendTo( \"#dibs-extra-checkout-fields\" )\n                }\n            }\n        },\n        /**\n         * Logs the message to the Dibs Easy log in WooCommerce.\n         *\n         * @param {string} message\n         */\n        logToFile( message ) {\n            $.ajax( {\n                url: wcDibsEasy.log_to_file_url,\n                type: \"POST\",\n                dataType: \"json\",\n                data: {\n                    message,\n                    nonce: wcDibsEasy.log_to_file_nonce,\n                },\n            } )\n        },\n        /**\n         * Fails the order with Dibs Easy on a checkout error and timeout.\n         *\n         * @param {string} event\n         * @param {string} errorMessage\n         */\n        failOrder( event, errorMessage ) {\n            const errorClasses = \"woocommerce-NoticeGroup woocommerce-NoticeGroup-checkout\"\n            const errorWrapper = `<div class=\"${ errorClasses }\">${ errorMessage }</div>`\n\n            // Send false and cancel\n            dibsEasyForWoocommerce.dibsCheckout.send( \"payment-order-finalized\", false )\n            // Renable the form.\n            dibsEasyForWoocommerce.bodyEl.trigger( \"updated_checkout\" )\n            $( dibsEasyForWoocommerce.checkoutFormSelector ).removeClass( \"processing\" )\n            // $( dibsEasyForWoocommerce.checkoutFormSelector ).unblock();\n            // $( '.woocommerce-checkout-review-order-table' ).unblock();\n\n            // Print error messages, and trigger checkout_error, and scroll to notices.\n            $( \".woocommerce-NoticeGroup-checkout,\" + \".woocommerce-error,\" + \".woocommerce-message\" ).remove()\n\n            $( dibsEasyForWoocommerce.checkoutFormSelector ).prepend( errorWrapper )\n            // $( dibsEasyForWoocommerce.checkoutFormSelector )\n            // \t.removeClass( 'processing' )\n            // \t.unblock();\n            $( dibsEasyForWoocommerce.checkoutFormSelector )\n                .find( \".input-text, select, input:checkbox\" )\n                .trigger( \"validate\" )\n                .blur()\n            $( document.body ).trigger( \"checkout_error\", [ errorMessage ] )\n            $( \"html, body\" ).animate(\n                {\n                    scrollTop: $( dibsEasyForWoocommerce.checkoutFormSelector ).offset().top - 100,\n                },\n                1000,\n            )\n        },\n    }\n\n    dibsEasyForWoocommerce.init()\n} )\n"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","jQuery","$","wcDibsEasy","dibsEasyForWoocommerce","bodyEl","paymentMethodEl","dibsCheckout","blocked","selectAnotherSelector","checkoutInitiated","dibsOrderProcessing","checkoutFormSelector","standardWooFields","standard_woo_checkout_fields","wooTerms","init","document","ready","loadDibs","on","changeFromDibsEasy","dibsIsSelected","length","paymentMethod","filter","val","moveExtraCheckoutFields","initDibsCheckout","updateCheckout","updatedCheckout","paymentCompleted","response","logToFile","concat","paymentId","redirectUrl","sessionStorage","getItem","window","location","href","displayMustLoginError","message","mustLoginNotice","prepend","updateAddress","data","updateNeeded","country","postCode","mustLogin","mustLoginMessage","freezeCheckout","etop","offset","top","animate","scrollTop","thawCheckout","body","trigger","console","log","undefined","Dibs","unblock","addressChanged","address","ajax","type","dataType","async","url","customer_address_updated_url","action","nonce","nets_checkout_nonce","success","error","complete","responseJSON","Checkout","checkoutKey","privateKey","dibs_payment_id","containerId","language","locale","getDibsEasyOrder","get_order_data_url","failOrder","redirect","setAddressData","consumer","payment","billingAddress","shippingAddress","hasBillingData","Array","isArray","addressLine1","postalCode","city","company","hasOwnProperty","_company$contactDetai","contactDetails","firstName","lastName","email","phoneNumber","prefix","number","name","change","blur","_consumer$privatePers","privatePerson","addressLine2","prop","submitOrder","block","overlayCSS","background","opacity","serialize","result","setItem","send","err","messages","JSON","stringify","e","preventDefault","change_payment_method_url","dibs_easy","removeClass","appendTo","form","i","fields","inArray","log_to_file_url","log_to_file_nonce","event","errorMessage","errorWrapper","remove","find"],"sourceRoot":""}